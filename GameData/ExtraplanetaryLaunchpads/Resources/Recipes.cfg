EL_ResourceRates {
	default = 5
	ElectricCharge = 1
	LiquidFuel = 0.36
	Oxidizer = 0.44
	MonoPropellant = 0.4
	XenonGas = 2
	Ore = 8
}

EL_ResourceRecipe {
	name = Ablator
	Resources {
		RocketParts = 1
	}
}

EL_ResourceRecipe {
	name = SolidFuel
	Resources {
		RocketParts = 1
	}
}

EL_TransferRecipe {
	name = RocketParts
	Resources {
		RocketParts = 1
	}
}

EL_RecycleRecipe {
	name = RocketParts
	Resources {
		ScrapMetal = 9
		loss = 1
	}
}

EL_ResourceRecipe {
	name = EVA Propellant
	Resources {
		MonoPropellant = 1
	}
}

EL_ResourceRecipe {
	name = LFOMix
	Resources {
		LiquidFuel = 9
		Oxidizer = 11
	}
}

EL_ConverterRecipe {
	name = LFOFiredSmelter
	// efficiency is 0..1

	// LiquidFuel is assumed to be RP-1 which is further assumed to be C12H16
	// and thus is 160.25544g/mol
	// Oxidizer is assumed to be liquid oxygen (O2) and thus is 31.9988g/mol
	// MetalOre is assumed to be hematite (Fe2O3) which is 159.6882g/mol
	//
	// The LiquidFuel + Oxidizer mix is assumed to be 2C12H16 + 17*O2 (this
	// gets pretty close to the correct volume ratios for RP-1+lox, and is
	// probably close enough for incomplete combustion).
	//
	// Metal is pure Iron (Fe), so 55.845g/mol, and carbon dioxid (CO2) is
	// 44.0095g/mol and water (H2O) 18.01528g/mol.
	//
	// This gives the following reaction:
	// 10Fe2O3 + 2C12H16 + 17O2 -> 20Fe + 24CO2 + 16H2O
	// with the following masses:
	//  input
	//   Fe2O3 = 1596.882g
	//   C12H16 = 320.51088g
	//   O2 = 543.9796g
	//  output
	//   Fe = 1116.9g
	//   CO2 = 1056.228g
	//   H2O = 288.24448g
	//
	// However, KSP's LiquidFuel and Oxidizer mix is only approximate, and the
	// resource densities are incorrect, so an LFOMix resource recipe is used
	// to fudge the numbers such that the KSP resources are pulled in the
	// "correct" proportion of 9:11 while maintaining the correct mass flow,
	// thus LFOMix mass is the sum of RP-1+lox, or 864.49048g
	Input {
		efficiency = 1
		// Even though the reduction consumes 9.6MJ, the burning of LFO
		// still produces 5.2MJ. The two will balance out to a net consumption.
		// See below for LFO heat explanation.
		LFOMix = 864.49048 -5186.94288	// 6MJ/kg of LFO, 0.86449048kg of LFO
		MetalOre = 1596.882
	}
	Output {
		efficiency = 1
		// See "Theoretical Minimum Energies To Produce Steel" by
		// R.J. Fruehan, O. Fortini, H.W. Paxton, R. Brindle
		Metal = 1116.9 -9627.678 // 8620MJ/t of Metal, 1.1169kg Metal
		CarbonDioxide* = 1056.228
		Water* = 288.24448
	}

	// When the smelter is too cold to reduce the ore, the combustion products
	// are not consumed and thus are emitted.
	// As the combustion is partial (2C12H16+17O2 vs 2C12H16+32O2), more than
	// just CarbonDioxide and Water are produced: CarbonMonoxide, Carbon,
	// Hydrogen and Formaldehyde are produced as well (possibly more, but this
	// is probably more than enough complexity).
	// The 0-efficiency equation is assumed to be:
	// 2C12H16 + 17O2 -> 2C + 17CO + 4CO2 + CH2O + 7H2 + 8H2O
	// The LiquidFuel + Oxidizer masses are the same as above, thus the LFOMix
	// mass is also the same.
	// Output masses are:
	//   C = 24.0214g
	//   CO = 476.1717g
	//   CO2 = 176.038g
	//   CH2O = 30.02598g
	//   H2 = 14.11116g
	//   H2O = 144.12224g
	Input {
		efficiency = 0
		// The engergy density of LFO was determined by examining the stock
		// engines and computing their actual power (ie, energy/second) from
		// their thrust and specific impulse. The numbers varied from 4.0MJ/kg
		// (24-77) to 5.9MJ/kg (poodle). Since nothing is 100% efficient,
		// 6MJ/kg seemed a reasonable energy availability.
		LFOMix = 864.49048 -5186.94288	// 6MJ/kg of LFO, 0.86449048kg of LFO
	}
	Output {
		efficiency = 0
		Carbon* = 24.0214
		CarbonDioxide* = 176.038
		CarbonMonoxide* = 476.1717
		Formaldehyde* = 30.02598
		Hydrogen* = 14.11116
		Water* = 144.12224
	}
}

EL_ConverterRecipe {
	name = LFOFiredRemelter
	Input {
		efficiency = 1
		LFOMix = 637 -3822	// 6MJ/kg of LFO, 0.637kg of LFO
		ScrapMetal = 3000
	}
	Output {
		efficiency = 1
		// See "Theoretical Minimum Energies To Produce Steel" by
		// R.J. Fruehan, O. Fortini, H.W. Paxton, R. Brindle
		Metal = 3000 -3822 // 1274kJ/kg of Metal, 3kg Metal
		// The LFO is used only for heating: its chemical products are not
		// consumed by any significant amount (maybe if the scrap metal was
		// rusty)
		Carbon* = 17.70017
		CarbonDioxide* = 129.7136
		CarbonMonoxide* = 350.8672
		Formaldehyde* = 22.12465
		Hydrogen* = 10.39781
		Water* = 106.1965
	}

	Input {
		efficiency = 0
		LFOMix = 637 -3822	// 6MJ/kg of LFO, 0.637kg of LFO
	}
	Output {
		efficiency = 0
		Carbon* = 17.70017
		CarbonDioxide* = 129.7136
		CarbonMonoxide* = 350.8672
		Formaldehyde* = 22.12465
		Hydrogen* = 10.39781
		Water* = 106.1965
	}
}

EL_ResourceLink {
	name = RocketFuel
	resource = LiquidFuel
	resource = Oxidizer
}

EL_ConverterRecipe {
	name = MetalWorking
	Input {
		// 9.36g/s @ 4.5kW is quite realistic (assumes 3000MPa cutting force,
		// 3mm depth of cut, 0.2mm/rev feed, 120m/min, 0.8 machine factor)
		// However, that is the rate of scrap metal production: metal
		// consumption must be higher (9.36/0.3, see below)
		Metal = 0.0312
		ElectricCharge = 4.5
		//FIXME kerbal hours would be much better, but they're not a
		// resource. Also, need to run the machines somehow.
	}
	Output {
		// I've seen as bad as 0.35 and better than 0.95 (for parts, scrap
		// would be 0.65 and 0.05). 0.3 seems like a good compromise, but a
		// tiny amount is lost.
		RocketParts = 0.7
		ScrapMetal* = 0.295
		loss* = 0.005
	}
}

EL_ConverterRecipe {
	name = ScrapSinter
	Input {
		// A full sintering process takes between 4.8 and 6.8 kWh/kg of
		// produced material (including losses, since they're both very small
		// and probably mostly due to finishing the surfaces). This is for
		// a couple of sites in "Energy consumption in powder metallurgical
		// manufacturing", Vladislav Kruzhanov and Volker Arnhold.
		// Split the difference and go for 5.8kWh/kg or 20.88MJ/kg. The base
		// rate is 0.01kg/s (probably quite fast) so 208.8EC/s
		ScrapMetal = 0.01
		ElectricCharge = 208.8
	}
	Output {
		// Sintering is extremely material efficient as rather than cutting
		// bits off, it melts them together
		RocketParts = 0.99
		loss* = 0.01
	}
}
