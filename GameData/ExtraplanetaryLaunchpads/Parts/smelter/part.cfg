//NOTE: the large smelter has a total volume of 57.669m^3 according to
//Blender's mesh volume utility. The volume dedicated to resource storage is
//currentlly 24.28m^3 which seems to be pretty good as the rest would be taken
//up by thermal insulation, the reaction chamber and other interal equipment.
//The smaller sizes are scaled appropriately.
PART {
	name = Smelter
	module = Part
	author = Skyler Lehmkuhl

	mesh = model.mu
	scale = 1
	rescaleFactor = 1

	node_stack_dorsal = -1.52104, 0.0, 0.0, -1.0, 0.0, 0.0, 2
	node_stack_ventral = 1.47572, 0.0, 0.0,  1.0, 0.0, 0.0, 2
	node_stack_top = 0.0, 4.98617, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -5.03150, 0.0, 0.0, -1.0, 0.0, 2
	node_attach = 1.47572, 0.0, 0.0, 1.0, 0.0, 0.0, 2

	TechRequired = advConstruction
	entryCost = 0
	cost = 126582
	category = Utility
	subcategory = 0
	title = Smelter
	manufacturer = Kairyuu Shipping
	description = This radical technology is a huge step up from the "bonfire" method of getting metal out of ore, providing Bagel the cherished "no longer the most deadly part makers" title.
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 10
	dragModelType = override
	maximum_drag = 0
	minimum_drag = 0
	angularDrag = 0
	crashTolerance = 7
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 5000

	MODULE {
		name = ExConverter
		EVARange = 3
		StartActionName = Start Metal Conversion
		StopActionName = Stop Metal Conversion
		INPUT_RESOURCE {
			ResourceName = MetalOre
			// MetalOre has mass and so Ratio is interpreted as tons/second
			// and internally converted to resource units/second.
			Ratio = 0.09581		// ~96kg/s (very fast!)
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			// EC has no mass (RESOURCE_DEFINITION density is 0) so Ratio is
			// interpreted as resource units.
			Ratio = 10
		}
		OUTPUT_RESOURCE {
			// From http://en.wikipedia.org/wiki/Iron_ore
			// Stage One: 3 Fe2O3 + CO → 2 Fe3O4 + CO2
			// Stage Two: Fe3O4 + CO → 3 FeO + CO2
			// Stage Three: FeO + CO → Fe + CO2
			//
			// Until parts can be made, ignore CO/CO2.
			//
			// So 3Fe2O3 + 9CO → 6Fe + 9CO2, Fe = 55.845, O = 15.999 which
			// means 479.061g of ore will produce 335.070g of iron. The
			// converter takes care of the relative densities for us, thus
			// the ratio is just 355.07/479.061.
			ResourceName = Metal
			Ratio = 0.699431
		}
	}

	MODULE {
		name = ExConverter
		EVARange = 3
		StartActionName = Start Scrap Metal Recycler
		StopActionName = Stop Scrap Metal Recycler
		INPUT_RESOURCE {
			ResourceName = ScrapMetal
			Ratio = 0.02
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 7.5
		}
		OUTPUT_RESOURCE {
			ResourceName = Metal
			Ratio = 1				// no loss
		}
	}

	RESOURCE {
		name = Metal
		amount = 0
		// a bit less than 10t (but a nice round number)
		// 1.28m^3
		maxAmount = 256
	}

	RESOURCE {
		name = MetalOre
		amount = 0
		// a bit less than 100t
		// 18m^3
		maxAmount = 3600
	}

	RESOURCE {
		name = ScrapMetal
		amount = 0
		// 5m^3
		maxAmount = 1000
	}
}

PART {
	name = SmallSmelter
	module = Part
	author = Skyler Lehmkuhl

	mesh = model.mu
	scale = 1
	rescaleFactor = 0.7937005259840998

	node_stack_dorsal = -1.52104, 0.0, 0.0, -1.0, 0.0, 0.0, 1
	node_stack_ventral = 1.47572, 0.0, 0.0,  1.0, 0.0, 0.0, 1
	node_stack_top = 0.0, 4.98617, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -5.03150, 0.0, 0.0, -1.0, 0.0, 1
	node_attach = 1.47572, 0.0, 0.0, 1.0, 0.0, 0.0, 1

	TechRequired = advConstruction
	entryCost = 0
	cost = 63291
	category = Utility
	subcategory = 0
	title = Smaller Smelter
	manufacturer = Kairyuu Shipping
	description = A smaller version of the smelter, designed to more easily start house fires while building rockets at home.
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 5
	dragModelType = override
	maximum_drag = 0
	minimum_drag = 0
	angularDrag = 0
	crashTolerance = 7
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 5000

	MODULE {
		name = ExConverter
		EVARange = 2
		StartActionName = Start Metal Conversion
		StopActionName = Stop Metal Conversion
		INPUT_RESOURCE {
			ResourceName = MetalOre
			// MetalOre has mass and so Ratio is interpreted as tons/second
			// and internally converted to resource units/second.
			Ratio = 0.047905
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			// EC has no mass (RESOURCE_DEFINITION density is 0) so Ratio is
			// interpreted as resource units.
			Ratio = 7.5
		}
		OUTPUT_RESOURCE {
			// From http://en.wikipedia.org/wiki/Iron_ore
			// Stage One: 3 Fe2O3 + CO → 2 Fe3O4 + CO2
			// Stage Two: Fe3O4 + CO → 3 FeO + CO2
			// Stage Three: FeO + CO → Fe + CO2
			//
			// Until parts can be made, ignore CO/CO2.
			//
			// So 3Fe2O3 + 9CO → 6Fe + 9CO2, Fe = 55.845, O = 15.999 which
			// means 479.061g of ore will produce 335.070g of iron. The
			// converter takes care of the relative densities for us, thus
			// the ratio is just 355.07/479.061.
			ResourceName = Metal
			Ratio = 0.699431
		}
	}

	MODULE {
		name = ExConverter
		EVARange = 2
		StartActionName = Start Scrap Metal Recycler
		StopActionName = Stop Scrap Metal Recycler
		INPUT_RESOURCE {
			ResourceName = ScrapMetal
			Ratio = 0.01
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 7.5
		}
		OUTPUT_RESOURCE {
			ResourceName = Metal
			Ratio = 1				// no loss
		}
	}

	RESOURCE {
		name = Metal
		amount = 0
		// a bit less than 5t (but a nice round number)
		// 0.64m^3
		maxAmount = 128
	}

	RESOURCE {
		name = MetalOre
		amount = 0
		// a bit less than 50t
		// 9m^3
		maxAmount = 1800
	}

	RESOURCE {
		name = ScrapMetal
		amount = 0
		// 2.5m^3
		maxAmount = 500
	}
}

PART {
    name = TinySmelter
    module = Part
    author = Skyler Lehmkuhl

    mesh = model.mu
    scale = 1
    rescaleFactor = 0.4

	node_stack_dorsal = -1.52104, 0.0, 0.0, -1.0, 0.0, 0.0, 1
	node_stack_ventral = 1.47572, 0.0, 0.0,  1.0, 0.0, 0.0, 1
	node_stack_top = 0.0, 4.98617, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -5.03150, 0.0, 0.0, -1.0, 0.0, 1
	node_attach = 1.47572, 0.0, 0.0, 1.0, 0.0, 0.0, 1

    TechRequired = advConstruction
    entryCost = 0
    cost = 18652
    category = Utility
    subcategory = 0
    title = Tiny Smelter
    manufacturer = Kairyuu Shipping
    description = A tiny version of the smelter, designed to more easily start house fires while building rockets at home.
    attachRules = 1,1,1,1,0

    // --- standard part parameters ---
    mass = 1.5
    dragModelType = override
    maximum_drag = 0
    minimum_drag = 0
    angularDrag = 0
    crashTolerance = 7
    breakingForce = 50
    breakingTorque = 50
    maxTemp = 5000

	MODULE {
		name = ExConverter
		StartActionName = Start Metal Conversion
		StopActionName = Stop Metal Conversion
		INPUT_RESOURCE {
			ResourceName = MetalOre
			// MetalOre has mass and so Ratio is interpreted as tons/second
			// and internally converted to resource units/second.
			Ratio = 0.00825
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			// EC has no mass (RESOURCE_DEFINITION density is 0) so Ratio is
			// interpreted as resource units.
			Ratio = 1.0
		}
		OUTPUT_RESOURCE {
			// From http://en.wikipedia.org/wiki/Iron_ore
			// Stage One: 3 Fe2O3 + CO → 2 Fe3O4 + CO2
			// Stage Two: Fe3O4 + CO → 3 FeO + CO2
			// Stage Three: FeO + CO → Fe + CO2
			//
			// Until parts can be made, ignore CO/CO2.
			//
			// So 3Fe2O3 + 9CO → 6Fe + 9CO2, Fe = 55.845, O = 15.999 which
			// means 479.061g of ore will produce 335.070g of iron. The
			// converter takes care of the relative densities for us, thus
			// the ratio is just 355.07/479.061.
			ResourceName = Metal
			Ratio = 0.699431
		}
	}

	MODULE {
		name = ExConverter
		StartActionName = Start Scrap Metal Recycler
		StopActionName = Stop Scrap Metal Recycler
		INPUT_RESOURCE {
			ResourceName = ScrapMetal
			Ratio = 0.00172
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 1
		}
		OUTPUT_RESOURCE {
			ResourceName = Metal
			Ratio = 1				// no loss
		}
	}

    RESOURCE {
        name = Metal
        amount = 0
		// 0.125m^3
        maxAmount = 25
    }

    RESOURCE {
        name = MetalOre
        amount = 0
		// 1.8m^3
        maxAmount = 360
    }

	RESOURCE {
		name = ScrapMetal
		amount = 0
		// 0.5m^3
		maxAmount = 100
	}
}
